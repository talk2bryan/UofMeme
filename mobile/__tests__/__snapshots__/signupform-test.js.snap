// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "marginBottom": 10,
      "padding": 20,
    }
  }
>
  <View
    keyboardVerticalOffset={0}
    onLayout={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "white",
          "flex": 1,
          "marginBottom": 10,
          "padding": 20,
        },
        Object {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 100,
            "width": 100,
          }
        }
      />
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "black",
            "fontSize": 20,
            "fontWeight": "bold",
            "marginTop": 10,
            "textAlign": "center",
            "width": 200,
          }
        }
      >
        Welcome to UofMeme
      </Text>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "black",
            "fontSize": 18,
            "marginBottom": 5,
            "marginTop": 5,
            "opacity": 0.8,
            "textAlign": "center",
            "width": 250,
          }
        }
      >
        Become a meme-ber today!
      </Text>
    </View>
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        autoCorrect={false}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Username"
        placeholderTextColor="white"
        returnKeyType="next"
        style={
          Object {
            "backgroundColor": "gray",
            "color": "white",
            "height": 40,
            "marginBottom": 20,
            "paddingHorizontal": 10,
          }
        }
      />
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        autoCorrect={false}
        keyboardType="email-address"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="example@myumanitoba.ca"
        placeholderTextColor="white"
        returnKeyType="next"
        style={
          Object {
            "backgroundColor": "gray",
            "color": "white",
            "height": 40,
            "marginBottom": 20,
            "paddingHorizontal": 10,
          }
        }
      />
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Password"
        placeholderTextColor="white"
        returnKeyType="next"
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "gray",
            "color": "white",
            "height": 40,
            "marginBottom": 20,
            "paddingHorizontal": 10,
          }
        }
      />
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Confirm Password"
        placeholderTextColor="white"
        returnKeyType="go"
        secureTextEntry={true}
        style={
          Object {
            "backgroundColor": "gray",
            "color": "white",
            "height": 40,
            "marginBottom": 20,
            "paddingHorizontal": 10,
          }
        }
      />
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "darkgrey",
            "marginBottom": 20,
            "opacity": 1,
            "paddingVertical": 15,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "white",
              "fontWeight": "700",
              "textAlign": "center",
            }
          }
        >
          SIGN UP
        </Text>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#337ab7",
            "marginBottom": 20,
            "opacity": 1,
            "paddingVertical": 15,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "white",
              "fontWeight": "700",
              "textAlign": "center",
            }
          }
        >
          Already have an account? Login here!
        </Text>
      </View>
    </View>
  </View>
</View>
`;
