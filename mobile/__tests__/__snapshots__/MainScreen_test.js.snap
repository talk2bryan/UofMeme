// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  loaded={
    Array [
      0,
    ]
  }
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
        "overflow": "hidden",
      },
      Object {
        "flex": 1,
      },
    ]
  }
>
  <RCTScrollView
    alwaysBounceHorizontal={false}
    automaticallyAdjustContentInsets={false}
    bounces={false}
    contentContainerStyle={
      Object {
        "flex": 1,
      }
    }
    contentOffset={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    directionalLockEnabled={true}
    horizontal={true}
    keyboardDismissMode="on-drag"
    keyboardShouldPersistTaps="always"
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    overScrollMode="never"
    pagingEnabled={true}
    scrollEnabled={true}
    scrollEventThrottle={1}
    scrollsToTop={false}
    showsHorizontalScrollIndicator={false}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "flex": 1,
            "overflow": "hidden",
          }
        }
        testID={undefined}
      >
        <View
          collapsable={false}
          removeClippedSubviews={false}
          style={
            Object {
              "flex": 1,
              "overflow": "hidden",
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "height": 1334,
                  },
                  Object {
                    "backgroundColor": "white",
                    "flex": 1,
                  },
                ]
              }
              virtual={undefined}
            >
              <RCTScrollView
                automaticallyAdjustContentInsets={false}
                contentContainerStyle={undefined}
                contentInset={
                  Object {
                    "bottom": 0,
                  }
                }
                enableAutoAutomaticScroll={true}
                enableResetScrollToCoords={true}
                extraHeight={75}
                extraScrollHeight={0}
                getScrollResponder={[Function]}
                handleOnScroll={[Function]}
                keyboardDismissMode="interactive"
                keyboardOpeningTime={250}
                keyboardShouldPersistTaps="handled"
                keyboardSpace={0}
                onScroll={[Function]}
                resetKeyboardSpace={[Function]}
                resetScrollToCoords={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                scrollEventThrottle={1}
                scrollForExtraHeightOnAndroid={[Function]}
                scrollToEnd={[Function]}
                scrollToFocusedInput={[Function]}
                scrollToPosition={[Function]}
                showsVerticalScrollIndicator={true}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "flex": 1,
                  }
                }
                viewIsInsideTabBar={false}
                virtual={undefined}
              >
                <View>
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "paddingTop": 20,
                      }
                    }
                  >
                    <ActivityIndicator
                      animating={true}
                      color="#999999"
                      hidesWhenStopped={true}
                      size="small"
                    />
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={null}
        testID={undefined}
      />
      <View
        style={null}
        testID={undefined}
      />
    </View>
  </RCTScrollView>
  <View
    collapsable={undefined}
    style={undefined}
  >
    <View
      collapsable={undefined}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "backgroundColor": "#F7F7F7",
          "borderTopColor": "rgba(0, 0, 0, .3)",
          "borderTopWidth": 0.5,
          "flexDirection": "row",
          "height": 49,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "height": 29,
                },
                Object {
                  "flex": 1,
                },
                false,
              ]
            }
          >
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </View>
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "height": 29,
                },
                Object {
                  "flex": 1,
                },
                false,
              ]
            }
          >
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </View>
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(0, 0, 0, 0)",
            "flex": 1,
          }
        }
        testID={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
              },
              Object {
                "flexDirection": "column",
                "justifyContent": "flex-end",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "height": 29,
                },
                Object {
                  "flex": 1,
                },
                false,
              ]
            }
          >
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 0,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </View>
            <View
              collapsable={undefined}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "center",
                  "height": "100%",
                  "justifyContent": "center",
                  "opacity": 1,
                  "position": "absolute",
                  "width": "100%",
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
