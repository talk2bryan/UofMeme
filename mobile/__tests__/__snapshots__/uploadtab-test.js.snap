// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={undefined}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Pick an image from camera roll
      </Text>
    </View>
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    visible={false}
  >
    <View
      style={
        Object {
          "marginTop": 22,
        }
      }
    >
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      />
      <View
        style={
          Object {
            "marginTop": 22,
          }
        }
      />
      <View>
        <View
          style={Object {}}
        >
          <View
            style={
              Object {
                "marginBottom": 10,
              }
            }
          >
            <View
              style={Object {}}
            >
              <TextInput
                accessibilityLabel={undefined}
                allowFontScaling={true}
                autoCapitalize={undefined}
                autoCorrect={undefined}
                autoFocus={undefined}
                blurOnSubmit={undefined}
                clearButtonMode={undefined}
                clearTextOnFocus={undefined}
                editable={undefined}
                enablesReturnKeyAutomatically={undefined}
                keyboardAppearance={undefined}
                keyboardType={undefined}
                maxLength={undefined}
                multiline={undefined}
                numberOfLines={undefined}
                onBlur={undefined}
                onChange={undefined}
                onChangeText={[Function]}
                onContentSizeChange={undefined}
                onEndEditing={undefined}
                onFocus={undefined}
                onKeyPress={undefined}
                onLayout={undefined}
                onSelectionChange={undefined}
                onSubmitEditing={undefined}
                placeholder="Description"
                placeholderTextColor={undefined}
                returnKeyType={undefined}
                secureTextEntry={undefined}
                selectTextOnFocus={undefined}
                selectionColor={undefined}
                selectionState={undefined}
                style={
                  Object {
                    "borderColor": "#cccccc",
                    "borderRadius": 4,
                    "borderWidth": 1,
                    "color": "#000000",
                    "fontSize": 17,
                    "height": 36,
                    "marginBottom": 5,
                    "paddingHorizontal": 7,
                    "paddingVertical": 7,
                  }
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
          </View>
        </View>
        <View
          accessibilityComponentType="button"
          accessibilityLabel={undefined}
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={undefined}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                ]
              }
            >
              Post my meme!
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
